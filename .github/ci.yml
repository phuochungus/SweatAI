name: Deploy Sweat API

on:
    push:
        branches:
            - main

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        outputs:
            GIT_SHA: ${{ steps.get_sha.outputs.GIT_SHA }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Login to Docker Hub
              run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            - name: Get short Git SHA
              id: get_sha
              run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV && echo "::set-output name=GIT_SHA::$(git rev-parse --short HEAD)"

            - name: Build and tag Docker image
              run: docker build -t ${{ secrets.DOCKER_USERNAME }}/sweat-nsfw-detection:latest .

            - name: Push Docker image to Docker Hub
              run: docker push ${{ secrets.DOCKER_USERNAME }}/sweat-nsfw-detection:latest

    deploy:
        needs: build-and-push
        runs-on: ubuntu-latest
        steps:
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ap-southeast-1

            - name: Deploy to EC2 using Session Manager
              run: |
                  # Create and encode the deployment script
                  DEPLOY_SCRIPT='#!/bin/bash
                  docker image prune -f
                  docker pull ${{ secrets.DOCKER_USERNAME }}/sweat-nsfw-detection:latest
                  docker stop sweat-nsfw-detection || true
                  docker rm sweat-nsfw-detection || true
                  docker run -d --name sweat-nsfw-detection -p 5000:5000 --restart always ${{ secrets.DOCKER_USERNAME }}/sweat-nsfw-detection:latest'

                  ENCODED_SCRIPT=$(echo "$DEPLOY_SCRIPT" | base64 -w 0)

                  # Execute with SSM Run Command
                  aws ssm send-command \
                    --instance-ids "i-07ab8c99647799af5" \
                    --document-name "AWS-RunShellScript" \
                    --parameters "{\"commands\":[\"echo $ENCODED_SCRIPT | base64 -d > /tmp/deploy.sh\",\"chmod +x /tmp/deploy.sh\",\"/tmp/deploy.sh\"]}"
